<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
      http://www.springframework.org/schema/security 
      http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx.xsd">
      
      <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="org.h2.Driver"/>
		<beans:property name="url" value="jdbc:h2:tcp://localhost/~/test"/>
		<beans:property name="username" value="sa"/>
		</beans:bean>
      
      <http auto-config="true">
      <intercept-url pattern="/adminpage" access="hasRole('ROLE_ADMIN')"/>
      <form-login login-page="/loginpage" login-processing-url="/perform_login"
       username-parameter="username" password-parameter="password" />
      <csrf disabled="true"/>
      <logout logout-url="/logout" logout-success-url="/index"/>
      </http>
      
      <authentication-manager>
      <authentication-provider>
      <jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query="select username,password, enabled from users where username=?"
		  authorities-by-username-query="select u1.username, u2.role from users u1, user_roles u2 where u1.username =u2.username  and u1.username=?" />
      </authentication-provider>
      </authentication-manager>
      
</beans:beans>